scale_x_continuous(breaks = unique(taskVarMean$n)) +
scale_y_continuous(breaks = seq(0, 1.5, 0.05)) +
scale_size_manual(values = c(2, 2, 2, 2, 2, 2, 2, 2, -1, -1, 2)) +
# Mean and SE portion of plot
geom_errorbar(data = taskVarMeans,
aes(x = n, ymin = NormMean - NormMeanSE, ymax = NormMean + NormMeanSE, colour = Source, width = 1.5),
position = position_dodge(width = 1)) +
geom_point(data = taskVarMeans,
aes(x = n, y = NormMean, colour = Source, size = as.factor(n)),
position = position_dodge(width = 1)) +
geom_line(data = taskVarMeans,
aes(x = n, y = NormMean, colour = Source),
position = position_dodge(width = 1)) +
scale_fill_manual(values = compPalette) +
scale_colour_manual(values = compPalette) +
theme(legend.position = "none",
strip.text = element_blank(),
strip.background = element_blank(),
panel.spacing = unit(0.25, "cm")) +
facet_grid(. ~ mask, space = "free", scale = "free")
####################
# Task Rank Correlation
####################
# Unlist
taskCorrTot <- do.call("rbind", groups_taskCorr)
taskCorrTot <- taskCorrTot %>%
mutate(TaskMean = (Task1 + Task2) / 2)
# Manipulate and bind with Yuko data
taskCorrTot <- taskCorrTot %>%
mutate(Source = "Model") %>%
select(n, TaskMean, Source) %>%
rbind(yukoCorr) %>%
mutate(Source = as.factor(Source))
taskCorrTot <- as.data.frame(taskCorrTot)
# Calculate means and SE
taskCorrMeans <- taskCorrTot %>%
group_by(Source, n) %>%
summarise(SpecMean = mean(TaskMean),
SpecSE = sd(TaskMean) / sqrt(length(TaskMean)),
SpecCI = 1.96 * SpecSE)
# Set for broken axis
addrows <- data.frame(Source = rep("Model", 2),
n = c(37, 95),
SpecMean = c(0.6673539, 0.6885347),
SpecSE = c(NA, NA),
SpecCI = c(NA, NA))
taskCorrMeans <- as.data.frame(taskCorrMeans)
taskCorrMeans <- rbind(taskCorrMeans, addrows)
taskCorrMeans$mask <- 0
taskCorrMeans$mask[taskCorrMeans$n > 90] <- 1
taskCorrTot$mask <- 0
taskCorrTot$mask[taskCorrTot$n > 90] <- 1
# Plot
gg_corr <- ggplot() +
geom_hline(data = taskCorrTot,
aes(yintercept = 0),
colour = "grey30") +
geom_point(data = taskCorrTot,
aes(x = n, y = TaskMean, fill = Source, colour = Source),
size = 0.5,
position = position_dodge(width = 1),
alpha = 0.4) +
theme_classic() +
labs(x = "Group Size",
y = "Specialization") +
scale_x_continuous(breaks = unique(taskCorrTot$n)) +
scale_y_continuous(breaks = seq(-1, 1, 0.2)) +
scale_size_manual(values = c(2, 2, 2, 2, 2, 2, 2, -1, -1, 2)) +
scale_fill_manual(values = compPalette) +
scale_colour_manual(values = compPalette) +
theme(legend.position = "none",
strip.text = element_blank(),
strip.background = element_blank(),
panel.spacing = unit(0.25, "cm")) +
# Mean and SE portion of plot
geom_errorbar(data = taskCorrMeans,
aes(x = n, ymin = SpecMean - SpecSE, ymax = SpecMean + SpecSE, colour = Source, width = 1.5),
position = position_dodge(width = 1)) +
geom_point(data = taskCorrMeans,
aes(x = n, y = SpecMean, colour = Source, fill = Source, size = as.factor(n)),
position = position_dodge(width = 1)) +
geom_line(data = taskCorrMeans,
aes(x = n, y = SpecMean,  colour = Source),
position = position_dodge(width = 1)) +
facet_grid(. ~ mask, scales = "free", space = "free")
####################
# Plot all
####################
# MultiPlot
png(filename = paste0("output/_ComprehnsivePlots/", filename, ".png"), width = 8, height = 8, units = "in", res = 800)
multiplot(gg_dist, gg_mean,  gg_corr, gg_varNorm, cols = 2)
dev.off()
multiplot(gg_dist, gg_mean,  gg_corr, gg_varNorm, cols = 2)
rm(list = ls())
source("scripts/__Util__MASTER.R")
library(ggplot2)
####################
# Demonstrating thresholds
####################
# Thresh eta = 2
stim <- seq(0, 30, 0.1)
thresh2 <- data.frame(stim = stim, prob =  (stim^2) / (stim^2 + 10^2), eta = "2")
# Thresh eta = 7
thresh5 <- data.frame(stim = stim, prob =  (stim^7) / (stim^7 + 10^7), eta = "7")
# Thresh eta = 10
thresh10 <- data.frame(stim = stim, prob =  (stim^20) / (stim^20 + 10^20), eta = "20")
# Merge
threshStyles <- rbind(thresh2, thresh5, thresh10)
# Set label
threshold <- paste(expression(theta[ij]))
# Plot
gg_thresh <- ggplot(data = threshStyles, aes(x = stim, y = prob, colour = eta)) +
geom_vline(aes(xintercept = 10), linetype = "dotted", size = 0.4) +
geom_line(size = 0.5) +
theme_bw() +
xlab(expression(s[j])) +
ylab(expression(P[ij])) +
scale_y_continuous(limit = c(0, 1), breaks = seq(0, 1, 0.5), expand = c(0.1, 0)) +
scale_colour_manual(values = c("#08306b", "#2171b5", "#6baed6"),
labels = c(expression(paste(eta, " = 2")),
expression(paste(eta, " = 5")),
expression(paste(eta, " = 20")))) +
annotate("text", x = 12, y = 0.0, label = threshold, parse = TRUE, size = 3) +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_thresh
gg_thresh <- ggplot(data = threshStyles, aes(x = stim, y = prob, colour = eta)) +
geom_vline(aes(xintercept = 10), linetype = "dotted", size = 0.4) +
geom_line(size = 0.5) +
theme_bw() +
xlab(expression(s[j])) +
ylab(expression(P[ij])) +
scale_y_continuous(limit = c(0, 1), breaks = seq(0, 1, 0.5), expand = c(0.1, 0)) +
scale_colour_manual(values = c("#08306b", "#2171b5", "#6baed6"),
labels = c(expression(paste(eta, " = 2")),
expression(paste(eta, " = 7")),
expression(paste(eta, " = 20")))) +
annotate("text", x = 12, y = 0.0, label = threshold, parse = TRUE, size = 3) +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_thresh
gg_thresh <- ggplot(data = threshStyles, aes(x = stim, y = prob, colour = eta)) +
geom_vline(aes(xintercept = 10), linetype = "dotted", size = 0.4) +
geom_line(size = 0.5) +
theme_bw() +
xlab(expression(s[j])) +
ylab(expression(P[ij])) +
scale_y_continuous(limit = c(0, 1), breaks = seq(0, 1, 0.5), expand = c(0.1, 0)) +
scale_colour_manual(values = c("#08306b", "#2171b5", "#6baed6"),
labels = c(expression(paste(eta, " = 2")),
expression(paste(eta, " = 7")),
expression(paste(eta, " = 20")))) +
annotate("text", x = 12, y = 0.0, label = threshold, parse = TRUE, size = 4) +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_thresh
ggsave(file = "output/OtherFigures/ThresholdSlopeExamples.png", width = 2, height = 2, units = "in", dpi = 800)
gg_thresh <- ggplot(data = threshStyles, aes(x = stim, y = prob, colour = eta)) +
geom_vline(aes(xintercept = 10), linetype = "dotted", size = 0.4) +
geom_line(size = 0.5) +
theme_bw() +
xlab(expression(s[j])) +
ylab(expression(P[ij])) +
scale_y_continuous(limit = c(0, 1), breaks = seq(0, 1, 0.5), expand = c(0.1, 0)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(eta, " = 2")),
expression(paste(eta, " = 7")),
expression(paste(eta, " = 20")))) +
annotate("text", x = 12, y = 0.0, label = threshold, parse = TRUE, size = 3.5) +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_thresh
ggsave(file = "output/OtherFigures/ThresholdSlopeExamples.png", width = 2, height = 2, units = "in", dpi = 800)
x <- seq(0,20, length = 1000)
# Different sigmas
sigma005 <- data.frame(x = seq(0,20, length = 1000),
y = dnorm(x, mean = 10, sd = 0.5),
sigma = "sigma == 0.05")
sigma01 <- data.frame(x = seq(0,20, length = 1000),
y = dnorm(x, mean = 10, sd = 1),
sigma = "sigma == 0.1")
sigma03 <- data.frame(x = seq(0,20, length = 1000),
y = dnorm(x, mean = 10, sd = 3),
sigma = "sigma == 0.3")
# Plot
sigmas <- rbind(sigma01, sigma03, sigma005)
sigmas$sigma <- factor(sigmas$sigma, levels = c("sigma == 0.05", "sigma == 0.1", "sigma == 0.3"))
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma)) +
geom_line(colour = "#74a9cf") +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = eta)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(eta, " = 2")),
expression(paste(eta, " = 7")),
expression(paste(eta, " = 20")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.7),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 4, height = 2, units = "in", dpi = 800)
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 2, height = 2, units = "in", dpi = 800)
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.9),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 2, height = 2, units = "in", dpi = 800)
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.95),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 2, height = 2, units = "in", dpi = 800)
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.97),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 2, height = 2, units = "in", dpi = 800)
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.99),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 2, height = 2, units = "in", dpi = 800)
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 1),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 2, height = 2, units = "in", dpi = 800)
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 1),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.background = element_rect(fill = NA, colour = NA),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 2, height = 2, units = "in", dpi = 800)
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 1.05),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.background = element_rect(fill = NA, colour = NA),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 2, height = 2, units = "in", dpi = 800)
gg_sig <- ggplot(data = sigmas, aes(x = x, y = y, group = sigma, colour = sigma)) +
geom_line() +
theme_bw() +
scale_y_continuous(expand = c(0,0), limits = c(0, 0.85)) +
scale_colour_manual(values = c("#08519c", "#4292c6", "#9ecae1"),
labels = c(expression(paste(sigma, " = 0.05")),
expression(paste(sigma, " = 0.1")),
expression(paste(sigma, " = 0.3")))) +
xlab(expression(theta[j])) +
ylab("Frequency") +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 1.01),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.background = element_rect(fill = NA, colour = NA),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_sig
ggsave(file = "output/OtherFigures/SigmaDistributionExamples.png", width = 2, height = 2, units = "in", dpi = 800)
