y = "Specialization") +
scale_x_continuous(breaks = unique(taskCorrTot$n)) +
scale_y_continuous(breaks = seq(-1, 1, 0.1),
limits = c(0, 0.9)) +
scale_colour_manual(values = fixedProbpalette,
labels = c("Experiment",
expression(paste(sigma, " = 0.05, ", eta, " = 7")),
expression(paste(sigma, " = 0.1, ", eta, " = 7")),
expression(paste(sigma, " = 0.25, ", eta, " = 7")),
expression(paste(sigma, " = 0.3, ", eta, " = 2")))) +
scale_fill_manual(values = fillPalette,
labels = c("Experiment",
expression(paste(sigma, " = 0.05, ", eta, " = 7")),
expression(paste(sigma, " = 0.1, ", eta, " = 7")),
expression(paste(sigma, " = 0.25, ", eta, " = 7")),
expression(paste(sigma, " = 0.3, ", eta, " = 2")))) +
scale_shape_manual(values = c(21, 21, 21, 21, 24),
labels = c("Experiment",
expression(paste(sigma, " = 0.05, ", eta, " = 7")),
expression(paste(sigma, " = 0.1, ", eta, " = 7")),
expression(paste(sigma, " = 0.25, ", eta, " = 7")),
expression(paste(sigma, " = 0.3, ", eta, " = 2")))) +
# Mean and SE portion of plot
geom_errorbar(aes(x = n, ymin = SpecMean - SpecSE, ymax = SpecMean + SpecSE, colour = Set, width = 1.5),
position = position_dodge(width = 0.5),
size = 0.25) +
geom_line(aes(x = n, y = SpecMean,  colour = Set),
size = 0.3,
position = position_dodge(width = 0.5)) +
geom_point(aes(x = n, y = SpecMean, colour = Set, fill = Set, shape = Set),
position = position_dodge(width = 0.5),
size = 1.5) +
theme(legend.position = "right",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
svg("output/MSFigures/FixedProbSpecializationFitswithlegend.svg", width = 2.65, height = 2.05)
gg_fixedProb
dev.off()
rm(list = ls())
source("scripts/__Util__MASTER.R")
source("scripts/3A_PrepPlotExperimentData.R")
library(RColorBrewer)
library(scales)
load("output/SpecializationMetrics/Rdata/FixedDelta06Sigma01Eta7100reps.Rdata")
# Unlist
taskCorrTot <- do.call("rbind", groups_taskCorr)
taskCorrTot <- taskCorrTot %>%
mutate(TaskMean = (Task1 + Task2) / 2)
taskSpec <- groups_specialization %>%
group_by(n, replicate) %>%
summarise(SpecMean = mean(TransSpec))
# Correlation vs Specialization at colony level
taskCorrSpec <- merge(taskCorrTot, taskSpec)
taskCorrSpec <- taskCorrSpec %>%
select(-Task1, -Task2) %>%
melt(id.vars = c("replicate", "n"))
names(taskCorrSpec) <- c("replicate", "n", "metric", "value")
taskCorrSpec <- taskCorrSpec %>%
group_by(n, metric) %>%
summarise(Mean = mean(value),
SE   = sd(value) / sqrt(length(value)))
gg_meanCorrSpec <- ggplot(data = taskCorrSpec, aes(x = n, group = metric)) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
size = 0.25,
width = 0.65,
position = position_dodge(width = 1)) +
geom_line(aes(y = Mean, linetype = metric),
position = position_dodge(width = 1),
size = 0.3) +
geom_point(aes(y = Mean, fill = metric),
size = 1,
shape = 21,
position = position_dodge(width = 1)) +
theme_classic() +
ylab("Value") +
xlab("Group Size")
scale_y_continuous(limits = c(-0.1, 0.7),
breaks = seq(-0.1, 1, 0.1),
expand = c(0, 0)) +
scale_x_continuous(breaks = unique(taskCorrSpec$n)) +
scale_fill_manual(name = "Metric",
values = c("black", "white"),
labels = c("Rank Correlation",
"Task Consistency")) +
scale_linetype_manual(name = "Metric",
values = c("solid", "dashed"),
labels = c("Rank Correlation",
"Task Consistency")) +
theme(legend.position = c(0.5, 0.5),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.5, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6),
axis.ticks.length = unit(-0.1, "cm"))
gg_meanCorrSpecSide <- ggplot(data = taskCorrSpec, aes(x = n, group = metric)) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
size = 0.25,
width = 0.65,
position = position_dodge(width = 1)) +
geom_line(aes(y = Mean, linetype = metric),
position = position_dodge(width = 1),
size = 0.3) +
geom_point(aes(y = Mean, fill = metric),
size = 1.5,
shape = 21,
position = position_dodge(width = 1)) +
theme_classic() +
ylab("Value") +
xlab("Group Size") +
scale_y_continuous(#limits = c(-0.1, 0.7),
breaks = seq(-0.1, 1, 0.1),
expand = c(0.1, 0)) +
scale_x_continuous(breaks = unique(taskCorrSpec$n)) +
scale_fill_manual(name = "Metric",
values = c("black", "white"),
labels = c("Rank Correlation",
"Task Consistency")) +
scale_linetype_manual(name = "Metric",
values = c("solid", "dashed"),
labels = c("Rank Correlation",
"Task Consistency")) +
theme(legend.position = "none",
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.5, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6),
axis.ticks.length = unit(-0.1, "cm"),
strip.text = element_blank(),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.25, "cm")) +
facet_wrap(~metric, scale = "free")
gg_meanCorrSpecSide
svg("output/MSFigures/CorrVsConsistencySide.svg", width = 2.675, height = 2.0125)
gg_meanCorrSpecSide
dev.off()
svg("output/MSFigures/CorrVsConsistencySide.svg", width = 2.67, height = 2.02)
gg_meanCorrSpecSide
dev.off()
svg("output/MSFigures/CorrVsConsistencySide.svg", width = 2.65, height = 2.015)
gg_meanCorrSpecSide
dev.off()
svg("output/MSFigures/CorrVsConsistencySide.svg", width = 2.6, height = 2.0175)
gg_meanCorrSpecSide
dev.off()
svg("output/MSFigures/CorrVsConsistencySide.svg", width = 2.62, height = 2.0175)
gg_meanCorrSpecSide
dev.off()
svg("output/MSFigures/CorrVsConsistencySide.svg", width = 2.62, height = 2.018)
gg_meanCorrSpecSide
dev.off()
svg("output/MSFigures/CorrVsConsistencySide.svg", width = 2.62, height = 2.05)
gg_meanCorrSpecSide
dev.off()
gg_thresh <- ggplot(data = threshStyles, aes(x = stim, y = prob, colour = eta)) +
geom_vline(aes(xintercept = 10), linetype = "dotted", size = 0.4) +
geom_line(size = 0.5) +
theme_bw() +
xlab(expression(s[j])) +
ylab(expression(P[ij])) +
scale_y_continuous(limit = c(0, 1), breaks = seq(0, 1, 0.5), expand = c(0.1, 0)) +
scale_colour_manual(values = c("black", "#2e6185", "#8db9d8"),
labels = c(expression(paste(eta, " = 2")),
expression(paste(eta, " = 5")),
expression(paste(eta, " = 20")))) +
annotate("text", x = 12, y = 0.0, label = threshold, parse = TRUE, size = 3) +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
# Thresh eta = 2
stim <- seq(0, 30, 0.1)
thresh2 <- data.frame(stim = stim, prob =  (stim^2) / (stim^2 + 10^2), eta = "2")
# Thresh eta = 7
thresh5 <- data.frame(stim = stim, prob =  (stim^7) / (stim^7 + 10^7), eta = "7")
# Thresh eta = 10
thresh10 <- data.frame(stim = stim, prob =  (stim^20) / (stim^20 + 10^20), eta = "20")
# Merge
threshStyles <- rbind(thresh2, thresh5, thresh10)
# Set label
threshold <- paste(expression(theta[ij]))
# Plot
gg_thresh <- ggplot(data = threshStyles, aes(x = stim, y = prob, colour = eta)) +
geom_vline(aes(xintercept = 10), linetype = "dotted", size = 0.4) +
geom_line(size = 0.5) +
theme_bw() +
xlab(expression(s[j])) +
ylab(expression(P[ij])) +
scale_y_continuous(limit = c(0, 1), breaks = seq(0, 1, 0.5), expand = c(0.1, 0)) +
scale_colour_manual(values = c("black", "#2e6185", "#8db9d8"),
labels = c(expression(paste(eta, " = 2")),
expression(paste(eta, " = 5")),
expression(paste(eta, " = 20")))) +
annotate("text", x = 12, y = 0.0, label = threshold, parse = TRUE, size = 3) +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_thresh
gg_thresh <- ggplot(data = threshStyles, aes(x = stim, y = prob, colour = eta)) +
geom_vline(aes(xintercept = 10), linetype = "dotted", size = 0.4) +
geom_line(size = 0.5) +
theme_bw() +
xlab(expression(s[j])) +
ylab(expression(P[ij])) +
scale_y_continuous(limit = c(0, 1), breaks = seq(0, 1, 0.5), expand = c(0.1, 0)) +
scale_colour_manual(values = c("black", "#3c7caa", "#a0c4de"),
labels = c(expression(paste(eta, " = 2")),
expression(paste(eta, " = 5")),
expression(paste(eta, " = 20")))) +
annotate("text", x = 12, y = 0.0, label = threshold, parse = TRUE, size = 3) +
theme(panel.grid = element_blank(),
panel.border = element_rect(fill = NA, size = 1),
legend.position = c(0.96, 0.30),
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.1, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
axis.text.x = element_text(size = 8),
axis.title = element_text(size = 10))
gg_thresh
ggsave(file = "output/OtherFigures/ThresholdSlopeExamples.png", width = 2, height = 2, units = "in", dpi = 800)
rm(list = ls())
load("/Users/ChrisTokita/Documents/Research/Tarnita Lab/Evolution of DOL")
load("c:/Users/ChrisTokita/Documents/Research/Tarnita Lab/Evolution of DOL")
load("~/Users/ChrisTokita/Documents/Research/Tarnita Lab/Evolution of DOL/")
load("/Users/ChrisTokita/Documents/Research/Tarnita Lab/Evolution of DOL/Fixed_Delta06Sigma01Eta7LargerGroups100reps.Rdata")
source("scripts/__Util__MASTER.R")
source("scripts/3A_PrepPlotExperimentData.R")
library(RColorBrewer)
library(scales)
# Unlist
stims <- unlist(groups_stim, recursive = FALSE)
stims <- do.call("rbind", stims)
# Select out example colonies
stimSet <- stims %>%
filter(n %in% c(2, 16, 32, 100)) %>%
filter(replicate == 1) %>%
group_by(n) %>%
mutate(timestep = 0:(length(n)-1)
)
# Plot
gg_stimEx <- ggplot(data = stimSet, aes(x = timestep, y = s1)) +
geom_line(colour = "#4eb3d3",
size = 0.2) +
theme_classic() +
xlab("Timestep") +
ylab("Stimulus") +
scale_x_continuous(breaks = seq(0, 10000, 5000),
labels = comma) +
theme(plot.margin = margin(0.25, 0.4, 0.25, 0.25, "cm"),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.ticks = element_line(size = 0.5),
strip.text = element_text(size = 7, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_grid(. ~ n)
gg_stimEx
stimSet <- stims %>%
filter(n %in% c(2, 16, 32, 100)) %>%
filter(replicate == 1) %>%
group_by(n) %>%
mutate(timestep = 0:(length(n)-1),
groupsize = factor(paste0("n = ", n),
levels = c("n = 2", "n = 16", "n = 32", "n = 100")))
# Plot
gg_stimEx <- ggplot(data = stimSet, aes(x = timestep, y = s1)) +
geom_line(colour = "#4eb3d3",
size = 0.2) +
theme_classic() +
xlab("Timestep") +
ylab("Stimulus") +
scale_x_continuous(breaks = seq(0, 10000, 5000),
labels = comma) +
theme(plot.margin = margin(0.25, 0.4, 0.25, 0.25, "cm"),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.ticks = element_line(size = 0.5),
strip.text = element_text(size = 7, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_grid(. ~ groupsize)
gg_stimEx
ggsave(filename = "output/FitnessPlots/StimOverTimeExampleLarger.png", width = 6, height = 2, units = "in", dpi = 600)
# Unlist
entropy <- unlist(groups_entropy, recursive = FALSE)
entropy <- do.call("rbind", entropy)
# Summarise
####################
# Task Rank Correlation
####################
# Unlist
taskCorrTot <- do.call("rbind", groups_taskCorr)
taskCorrTot <- taskCorrTot %>%
mutate(TaskMean = (Task1 + Task2) / 2)
####################
# Task Performance Specialization
####################
taskSpec <- groups_specialization %>%
group_by(n, replicate) %>%
summarise(SpecMean = mean(TransSpec))
taskDist <- unlist(groups_taskDist, recursive = FALSE)
taskDistTot <- do.call("rbind", taskDist)
taskDistSpec <- taskDistTot %>%
mutate(Active = Task1 + Task2) %>%
merge(groups_specialization) %>%
filter(n %in% c(2, 16, 32, 100)) %>%
mutate(groupsize = factor(paste0("n = ", n),
levels = c("n = 2", "n = 16", "n = 32", "n = 100")))
gg_actspec <- ggplot(data = taskDistSpec, aes(x = Active, y = TransSpec, colour = groupsize)) +
geom_hline(aes(yintercept = 0),
colour = "grey30",
size = 0.25) +
geom_point(alpha = 0.5,
size = 0.2) +
theme_bw() +
scale_colour_manual(name = "Group Size",
values = palette) +
scale_y_continuous(limits = c(-0.2, 1)) +
scale_x_continuous(breaks = seq(0, 1, 0.2)) +
theme(legend.position = "none") +
xlab("Activity Level") +
ylab("Task Consistency") +
theme(legend.position = "none",
legend.title = element_text(size = 7),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, "cm"),
legend.text = element_text(size = 6),
axis.text = element_text(size = 7),
axis.title = element_text(size = 12),
axis.ticks = element_line(size = 0.5),
panel.border = element_rect(fill = NA, size = 1),
panel.grid = element_blank(),
strip.text = element_text(size = 7, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_wrap(~ groupsize)
gg_actspec
palette <- c("#F00924", "#4C0E78", "#bdbdbd", "#525252")
gg_actspec <- ggplot(data = taskDistSpec, aes(x = Active, y = TransSpec, colour = groupsize)) +
geom_hline(aes(yintercept = 0),
colour = "grey30",
size = 0.25) +
geom_point(alpha = 0.5,
size = 0.2) +
theme_bw() +
scale_colour_manual(name = "Group Size",
values = palette) +
scale_y_continuous(limits = c(-0.2, 1)) +
scale_x_continuous(breaks = seq(0, 1, 0.2)) +
theme(legend.position = "none") +
xlab("Activity Level") +
ylab("Task Consistency") +
theme(legend.position = "none",
legend.title = element_text(size = 7),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, "cm"),
legend.text = element_text(size = 6),
axis.text = element_text(size = 7),
axis.title = element_text(size = 12),
axis.ticks = element_line(size = 0.5),
panel.border = element_rect(fill = NA, size = 1),
panel.grid = element_blank(),
strip.text = element_text(size = 7, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_wrap(~ groupsize)
gg_actspec
gg_corrspec <- ggplot(data = taskCorrSpec, aes (x = TransSpec, y = TaskMean, col = groupsize)) +
geom_hline(aes(yintercept = 0),
colour = "grey30",
size = 0.25) +
geom_vline(aes(xintercept = 0),
colour = "grey30",
size = 0.25) +
geom_point(alpha = 0.5,
size = 0.2) +
theme_bw() +
scale_colour_manual(name = "Group Size",
values = palette) +
scale_x_continuous(limits = c(-0.4, 1)) +
scale_y_continuous(limits = c(-0.4, 1)) +
theme(legend.position = "none") +
xlab("Task Consistency") +
ylab("Rank Correlation") +
theme(legend.position = "none",
legend.title = element_text(size = 7),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, "cm"),
legend.text = element_text(size = 6),
axis.text = element_text(size = 7),
axis.title = element_text(size = 12),
axis.ticks = element_line(size = 0.5),
panel.border = element_rect(fill = NA, size = 1),
panel.grid = element_blank(),
strip.text = element_text(size = 7, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_wrap(~ groupsize)
taskCorrSpec <- merge(groups_specialization, taskCorrTot)
taskCorrSpec <- taskCorrSpec %>%
filter(n %in% c(2, 16, 32, 100)) %>%
mutate(groupsize = factor(paste0("n = ", n),
levels = c("n = 2", "n = 16", "n = 32", "n = 100")))
gg_corrspec <- ggplot(data = taskCorrSpec, aes (x = TransSpec, y = TaskMean, col = groupsize)) +
geom_hline(aes(yintercept = 0),
colour = "grey30",
size = 0.25) +
geom_vline(aes(xintercept = 0),
colour = "grey30",
size = 0.25) +
geom_point(alpha = 0.5,
size = 0.2) +
theme_bw() +
scale_colour_manual(name = "Group Size",
values = palette) +
scale_x_continuous(limits = c(-0.4, 1)) +
scale_y_continuous(limits = c(-0.4, 1)) +
theme(legend.position = "none") +
xlab("Task Consistency") +
ylab("Rank Correlation") +
theme(legend.position = "none",
legend.title = element_text(size = 7),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, "cm"),
legend.text = element_text(size = 6),
axis.text = element_text(size = 7),
axis.title = element_text(size = 12),
axis.ticks = element_line(size = 0.5),
panel.border = element_rect(fill = NA, size = 1),
panel.grid = element_blank(),
strip.text = element_text(size = 7, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_wrap(~ groupsize)
gg_corrspec
gg_corrspec <- ggplot(data = taskCorrSpec, aes (x = TransSpec, y = TaskMean, col = groupsize)) +
geom_hline(aes(yintercept = 0),
colour = "grey30",
size = 0.25) +
geom_vline(aes(xintercept = 0),
colour = "grey30",
size = 0.25) +
geom_point(alpha = 0.5,
size = 0.2) +
theme_bw() +
scale_colour_manual(name = "Group Size",
values = palette) +
scale_x_continuous(limits = c(-0.4, 1)) +
scale_y_continuous(limits = c(-0.4, 1)) +
theme(legend.position = "none") +
xlab("Task Consistency") +
ylab("Rank Correlation") +
theme(legend.position = "none",
legend.title = element_text(size = 7),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, "cm"),
legend.text = element_text(size = 6),
axis.text = element_text(size = 7),
axis.title = element_text(size = 12),
axis.ticks = element_line(size = 0.5),
panel.border = element_rect(fill = NA, size = 1),
panel.grid = element_blank(),
strip.text = element_text(size = 7, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_grid(.~ groupsize)
gg_corrspec
ggsave(filename = "output/SpecializationMetrics/Plots/SpecializationVsCorrelationFacetLargerGroups.png", width = 4, height = 2, units = "in", dpi = 600)
ggsave(filename = "output/SpecializationMetrics/Plots/SpecializationVsCorrelationFacetLargerGroups.png", width = 6, height = 2, units = "in", dpi = 600)
