legend.title = element_blank(),
axis.text.y = element_text(size = 6, margin = margin(5, 2, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(2, 5, -2, 5)),
axis.title = element_text(size = 9),
axis.ticks.length = unit(0, "cm"),
panel.border = element_rect(fill = "NA", size = 1))
gg_abslope
gg_abslope <- ggplot() +
geom_raster(data = improve06,
aes(x = sigma,
y = threshSlope,
fill = Increase)) +
stat_contour(data = spec.fit,
aes(x = sigma,
y = threshSlope,
z = spec),
size = 0.35,
colour = "white",
linetype = "dashed",
breaks = c(0.2926124)) +
stat_contour(data = spec.fit,
aes(x = sigma,
y = threshSlope,
z = spec),
size = 0.35,
colour = "white",
breaks = c(0.3576374)) +
theme_bw() +
scale_x_continuous(expand = c(0, -0.002)) +
scale_y_continuous(expand = c(0, -0.2), breaks = c(1, seq(10, 30, 10))) +
scale_fill_gradientn(name = "Specialization\nIncrease",
colors = colPal,
breaks = seq(0, 0.5, 0.1),
colours = colPal,
limits = c(0, 0.5),
oob = squish) +
scale_colour_gradientn(name = "Specialization\nIncrease",
colors = colPal,
breaks = seq(0, 0.5, 0.1),
colours = colPal,
limits = c(0, 0.5),
oob = squish) +
xlab(expression(sigma)) +
ylab(expression(eta)) +
theme(legend.position = "none",
# legend.key.height = unit(0.84, "cm"),
legend.key.height = unit(0.17, "npc"),
legend.key.width= unit(0.2, "cm"),
legend.key = element_rect(colour = "black", size = 0.5),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.title = element_blank(),
axis.text.y = element_text(size = 6, margin = margin(5, 2, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(2, 5, -2, 5)),
axis.title = element_text(size = 9),
axis.ticks.length = unit(0, "cm"),
panel.border = element_rect(fill = "NA", size = 1))
gg_abslope
ggsave("output/MSFigures/ParameterSpaceDelta06wContourfill.png", width = 2.7, height = 2, units = "in", dpi = 600)
gg_abslope <- ggplot() +
geom_raster(data = improve06,
aes(x = sigma,
y = threshSlope,
fill = Increase)) +
stat_contour(data = spec.fit,
aes(x = sigma,
y = threshSlope,
z = spec),
size = 0.35,
colour = "white",
breaks = c(0.2926124)) +
stat_contour(data = spec.fit,
aes(x = sigma,
y = threshSlope,
z = spec),
size = 0.35,
colour = "white",
linetype = "dashed",
breaks = c(0.3576374)) +
theme_bw() +
scale_x_continuous(expand = c(0, -0.002)) +
scale_y_continuous(expand = c(0, -0.2), breaks = c(1, seq(10, 30, 10))) +
scale_fill_gradientn(name = "Specialization\nIncrease",
colors = colPal,
breaks = seq(0, 0.5, 0.1),
colours = colPal,
limits = c(0, 0.5),
oob = squish) +
scale_colour_gradientn(name = "Specialization\nIncrease",
colors = colPal,
breaks = seq(0, 0.5, 0.1),
colours = colPal,
limits = c(0, 0.5),
oob = squish) +
xlab(expression(sigma)) +
ylab(expression(eta)) +
theme(legend.position = "none",
# legend.key.height = unit(0.84, "cm"),
legend.key.height = unit(0.17, "npc"),
legend.key.width= unit(0.2, "cm"),
legend.key = element_rect(colour = "black", size = 0.5),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.title = element_blank(),
axis.text.y = element_text(size = 6, margin = margin(5, 2, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(2, 5, -2, 5)),
axis.title = element_text(size = 9),
axis.ticks.length = unit(0, "cm"),
panel.border = element_rect(fill = "NA", size = 1))
gg_abslope
ggsave("output/MSFigures/ParameterSpaceDelta06wContourfill.png", width = 2.7, height = 2, units = "in", dpi = 600)
source("scripts/__Util__MASTER.R")
library(RColorBrewer)
library(scales)
# load data
load("output/__RData/FixedDelta06Sigma01Eta7100reps.Rdata")
# Unlist
stims <- unlist(groups_stim, recursive = FALSE)
stims <- do.call("rbind", stims)
#### Time steps ####
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 1:(length(Set)-1)) %>%
mutate(Window = t %/% 200) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1),
s2 = mean(s2)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 200) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1),
s2 = mean(s2)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
0 %/% 200
1 %/% 200
200 %/% 200
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 200) %>%
filter(t != 0) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1),
s2 = mean(s2)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
View(stimFluct)
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 200) %>%
filter(t != 0)
View(stimFluct)
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 200) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1),
s2 = mean(s2)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 200) %>%
filter(t != 0) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1, na.rm = TRUE),
s2 = mean(s2, na.rm = TRUE)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
View(stimFluct)
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 200) %>%
filter(t != 0) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1),
s2 = mean(s2)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
sets <- which(stimFluct$BeginSet == TRUE)
stimFluct$s1Diff[sets] <- NA
stimFluct$s2Diff[sets] <- NA
stimFluct <- stimFluct %>%
group_by(n, Set) %>%
summarise(s1Fluct = mean(s1Diff, na.rm = TRUE),
s2Fluct = mean(s2Diff, na.rm = TRUE)) %>%
mutate(GroupSizeFactor = factor(n, levels = sort(unique(n))))
# Summarise by n
stimSumFluct <- stimFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(s1FluctMean = mean(Task1Fluct, na.rm = TRUE),
s1FluctSE = sd(Task1Fluct, na.rm = TRUE) / sqrt(length(Task1Fluct)),
s2FluctMean = mean(Task2Fluct, na.rm = TRUE),
s2FluctSE = sd(Task2Fluct, na.rm = TRUE) / sqrt(length(Task2Fluct)),
InactiveFluctMean = mean(InactiveFluct, na.rm = TRUE))
stimSumFluct <- as.data.frame(stimSumFluct)
stimSumFluct <- stimSumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
stimSumFluct <- stimFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(s1FluctMean = mean(s1Fluct, na.rm = TRUE),
s1FluctSE = sd(s1Fluct, na.rm = TRUE) / sqrt(length(Task1Fluct)),
s2FluctMean = mean(s2Fluct, na.rm = TRUE),
s2FluctSE = sd(s2Fluct, na.rm = TRUE) / sqrt(length(Task2Fluct)),
InactiveFluctMean = mean(InactiveFluct, na.rm = TRUE))
stimSumFluct <- stimFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(s1FluctMean = mean(s1Fluct, na.rm = TRUE),
s1FluctSE = sd(s1Fluct, na.rm = TRUE) / sqrt(length(s1Fluct)),
s2FluctMean = mean(s2Fluct, na.rm = TRUE),
s2FluctSE = sd(s2Fluct, na.rm = TRUE) / sqrt(length(s2Fluct)),
InactiveFluctMean = mean(InactiveFluct, na.rm = TRUE))
stimSumFluct <- stimFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(s1FluctMean = mean(s1Fluct, na.rm = TRUE),
s1FluctSE = sd(s1Fluct, na.rm = TRUE) / sqrt(length(s1Fluct)),
s2FluctMean = mean(s2Fluct, na.rm = TRUE),
s2FluctSE = sd(s2Fluct, na.rm = TRUE) / sqrt(length(s2Fluct)))
stimSumFluct <- as.data.frame(stimSumFluct)
stimSumFluct <- stimSumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
palette <- c("#83343E", "#F00924", "#F7A329", "#FDD545", "#027C2C", "#1D10F9", "#4C0E78")
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1var),
fill = "grey50",
colour = "grey50",
size = 0.7,
alpha = 0.4,
stroke = 0) +
geom_line(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
size = 0.3) +
theme_classic() +
labs(x = "Group Size",
y = "Variance in Task Stimulus") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
scale_y_continuous(breaks = seq(0, 22, 5),
limits = c(0, 22),
expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_stimfluct
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
alpha = 0.4,
stroke = 0) +
geom_line(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
size = 0.3) +
theme_classic() +
labs(x = "Group Size",
y = "Variance in Task Stimulus") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
scale_y_continuous(breaks = seq(0, 22, 5),
limits = c(0, 22),
expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_stimfluct
warnings()
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
alpha = 0.4,
stroke = 0) +
geom_line(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
size = 0.3) +
theme_classic() +
labs(x = "Group Size",
y = "Variance in Task Stimulus") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
# scale_y_continuous(breaks = seq(0, 22, 5),
#                    limits = c(0, 22),
#                    expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_stimfluct
ggsave("output/MSFigures/StimulusFluctuationsTstep200.png", width = 2.82, height = 2.05, units = "in", dpi = 600)
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 1) %>%
filter(t != 0) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1),
s2 = mean(s2)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
sets <- which(stimFluct$BeginSet == TRUE)
stimFluct$s1Diff[sets] <- NA
stimFluct$s2Diff[sets] <- NA
# Summarise by colony/set
stimFluct <- stimFluct %>%
group_by(n, Set) %>%
summarise(s1Fluct = mean(s1Diff, na.rm = TRUE),
s2Fluct = mean(s2Diff, na.rm = TRUE)) %>%
mutate(GroupSizeFactor = factor(n, levels = sort(unique(n))))
# Summarise by n
stimSumFluct <- stimFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(s1FluctMean = mean(s1Fluct, na.rm = TRUE),
s1FluctSE = sd(s1Fluct, na.rm = TRUE) / sqrt(length(s1Fluct)),
s2FluctMean = mean(s2Fluct, na.rm = TRUE),
s2FluctSE = sd(s2Fluct, na.rm = TRUE) / sqrt(length(s2Fluct)))
stimSumFluct <- as.data.frame(stimSumFluct)
stimSumFluct <- stimSumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
View(stimSumFluct)
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
alpha = 0.4,
stroke = 0) +
geom_line(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
size = 0.3) +
theme_classic() +
labs(x = "Group Size",
y = "Variance in Task Stimulus") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
# scale_y_continuous(breaks = seq(0, 22, 5),
#                    limits = c(0, 22),
#                    expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_stimfluct
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
alpha = 0.4,
stroke = 0) +
geom_line(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
size = 0.3) +
theme_classic() +
labs(x = "Group Size",
y = "Variance in Task Stimulus") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
scale_y_continuous(breaks = seq(0, 1, 0.1),
limits = c(0, 0.82),
expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_stimfluct
ggsave("output/MSFigures/StimulusFluctuationsTstep1.png", width = 2.82, height = 2.05, units = "in", dpi = 600)
