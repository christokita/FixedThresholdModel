y = "Task fluctuation") +
scale_x_continuous(breaks = unique(tallyFluct$n),
labels = c(1, "", 4, "", 8, "", 16)) +
scale_y_continuous(breaks = seq(0, 0.2, 0.01),
limits = c(0, 0.052),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE),
colour= "black",
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean),
colour = "black",
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 8, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_fluct
multiplot(gg_stimfluct, gg_fluct, cols = 2)
# Plot
gg_fluct <- ggplot() +
# geom_point(data = tallyFluct,
#            aes(x = n, y = Task1Fluct),
#            fill = "grey50",
#            colour = "grey50",
#            size = 0.5,
#            position = position_jitter(width = 0.2),
#            alpha = 0.4,
#            stroke = 0) +
theme_classic() +
labs(x = "Group size",
y = "Task fluctuation") +
scale_x_continuous(breaks = unique(tallyFluct$n),
labels = c(1, "", 4, "", 8, "", 16)) +
scale_y_continuous(breaks = seq(0, 0.2, 0.01),
limits = c(0, 0.0515),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE),
colour= "black",
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean),
colour = "black",
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 8, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
multiplot(gg_stimfluct, gg_fluct, cols = 2)
# Combined plot
svg("output/MSFigures/TaskAndStimFluctuationsCombined.svg",  width = 2.8, height = 2.07)
multiplot(gg_stimfluct, gg_fluct, cols = 2)
dev.off()
rm(list = ls())
source("scripts/__Util__MASTER.R")
source("scripts/3A_PrepPlotExperimentData.R")
load("output/__RData/FixedDelta06Sigma01Eta7100reps.Rdata")
# Set variable
filename <- "Fixed_Delta06Sigma01Eta7"
# Palette without single individuals
#palette <- c("#F00924", "#F7A329", "#FDD545", "#027C2C", "#1D10F9", "#4C0E78", "#bdbdbd", "#525252")
# Palette without single individuals
palette <- c("#83343E", "#F00924", "#F7A329", "#FDD545", "#027C2C", "#1D10F9", "#4C0E78", "#bdbdbd", "#525252")
# Bind together
taskDist <- unlist(groups_taskDist, recursive = FALSE)
taskDistTot <- do.call("rbind", taskDist)
# Choose random subset of replicates to show
set.seed(323)
to_show <- sample(1:100, 10, replace = F)
# Manipulate
taskDistTot <- taskDistTot %>%
filter(replicate %in% to_show) %>%
mutate(set = paste0(n, "-", replicate)) %>%
mutate(set = factor(set,
levels = mixedsort(unique(set))),
n = as.factor(n))
taskSum <- taskDistTot %>%
group_by(n) %>%
summarise(taskMean1 = mean(Task1),
taskMean2 = mean(Task2))
# Plot
plot_TaskMat <- as.data.frame(taskDistTot)
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
scale_color_manual(values = palette) +
scale_y_continuous(limits = c(0, 0.7), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
gg_dist
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
scale_color_manual(values = palette) +
scale_y_continuous(limits = c(0, 0.71), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
gg_dist
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
scale_color_manual(values = palette) +
scale_y_continuous(limits = c(0, 0.72), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
gg_dist
svg("output/MSFigures/TaskDistExample.svg", width = 2.8, height = 2.07)
gg_dist
dev.off()
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
scale_color_manual(values = palette) +
scale_y_continuous(limits = c(0, 0.63), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
gg_dist
svg("output/MSFigures/TaskDistExample.svg", width = 2.8, height = 2.07)
gg_dist
dev.off()
svg("output/MSFigures/TaskDistExample.svg", width = 2.8, height = 2.07)
gg_dist
dev.off()
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
scale_color_manual(values = palette) +
scale_y_continuous(limits = c(0, 0.72), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
svg("output/MSFigures/TaskDistExample.svg", width = 2.8, height = 2.07)
gg_dist
dev.off()
palette <- brewer.pal(7, "paired")
palette <- brewer.pal(7, "Paired")
# Bind together
taskDist <- unlist(groups_taskDist, recursive = FALSE)
taskDistTot <- do.call("rbind", taskDist)
# Choose random subset of replicates to show
set.seed(323)
to_show <- sample(1:100, 10, replace = F)
# Manipulate
taskDistTot <- taskDistTot %>%
filter(replicate %in% to_show) %>%
mutate(set = paste0(n, "-", replicate)) %>%
mutate(set = factor(set,
levels = mixedsort(unique(set))),
n = as.factor(n))
taskSum <- taskDistTot %>%
group_by(n) %>%
summarise(taskMean1 = mean(Task1),
taskMean2 = mean(Task2))
# Plot
plot_TaskMat <- as.data.frame(taskDistTot)
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
scale_color_manual(values = palette) +
scale_y_continuous(limits = c(0, 0.72), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
gg_dist
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
# scale_color_manual(values = palette) +
scale_fill_grey() +
scale_y_continuous(limits = c(0, 0.72), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
gg_dist
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
# scale_color_manual(values = palette) +
scale_color_grey() +
scale_y_continuous(limits = c(0, 0.72), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
gg_dist
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
scale_color_manual(values = palette) +
scale_y_continuous(limits = c(0, 0.72), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
gg_dist
palette <- c("#bababa", "#4d4d4d", "#bababa", "#4d4d4d", "#bababa", "#4d4d4d", "#bababa")
gg_dist <- ggplot(data = plot_TaskMat, aes(y = Task1, x = set)) +
geom_point(aes(colour = n), size = 0.2) +
theme_classic() +
labs(x = "Group size",
y = "Task 1 frequency") +
scale_color_manual(values = palette) +
scale_y_continuous(limits = c(0, 0.72), breaks = seq(0, 1, 0.1), expand = c(0, 0)) +
theme( axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_blank(),
axis.ticks.x = element_blank(),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.title.x = element_text(size = 10, margin = margin(15, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
legend.position = "none")
gg_dist
svg("output/MSFigures/TaskDistExample_bw.svg", width = 2.8, height = 2.07)
gg_dist
dev.off()
rm(list = ls())
source("scripts/__Util__MASTER.R")
library(RColorBrewer)
library(scales)
# load data
load("output/__RData/FixedDelta06Sigma01Eta7100reps.Rdata")
# Unlist
stims <- unlist(groups_stim, recursive = FALSE)
stims <- do.call("rbind", stims)
#### Time steps ####
# Normalize and Summarise by "day" (i.e., time window) and calculate difference
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 200) %>%
filter(t != 0) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1),
s2 = mean(s2)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
# Make sure first diff row of each new set is NA
sets <- which(stimFluct$BeginSet == TRUE)
stimFluct$s1Diff[sets] <- NA
stimFluct$s2Diff[sets] <- NA
# Summarise by colony/set
stimFluct <- stimFluct %>%
group_by(n, Set) %>%
summarise(s1Fluct = mean(s1Diff, na.rm = TRUE),
s2Fluct = mean(s2Diff, na.rm = TRUE)) %>%
mutate(GroupSizeFactor = factor(n, levels = sort(unique(n))))
# Summarise by n
stimSumFluct <- stimFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(s1FluctMean = mean(s1Fluct, na.rm = TRUE),
s1FluctSE = sd(s1Fluct, na.rm = TRUE) / sqrt(length(s1Fluct)),
s2FluctMean = mean(s2Fluct, na.rm = TRUE),
s2FluctSE = sd(s2Fluct, na.rm = TRUE) / sqrt(length(s2Fluct)))
stimSumFluct <- as.data.frame(stimSumFluct)
stimSumFluct <- stimSumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
# Plot
gg_stimfluct <- ggplot() +
# geom_point(data = stimFluct,
#            aes(x = n, y = s1Fluct),
#            fill = "grey50",
#            colour = "grey50",
#            position = position_jitter(width = 0.2),
#            size = 0.5,
#            alpha = 0.4,
#            stroke = 0) +
# geom_line(data = stimSumFluct,
#           aes(x = n, y = s1FluctMean),
#           size = 0.3) +���
theme_classic() +
labs(x = "Group size",
y = "Stimulus fluctuation") +
scale_x_continuous(breaks = unique(stimFluct$n),
labels = c(1, "", 4, "", 8, "", 16)) +
scale_y_continuous(breaks = seq(0, 2, 0.4),
limits = c(0, 1.65),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE),
colour = "black",
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
colour = "black",
size = 0.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 8, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_stimfluct
load("output/SpecializationMetrics/Rdata/FixedDelta06Sigma01Eta7100reps.Rdata")
# Unlist
tallies <- unlist(groups_taskTally, recursive = FALSE)
tallies <- do.call("rbind", tallies)
#### Time steps ####
# Normalize and Summarise by "day" (i.e., time window) and calculate difference
tallyFluct <- tallies %>%
mutate(Task1 = Task1 / n,
Task2 = Task2 / n,
Inactive = Inactive / n,
Set = paste0(n, "-", replicate),
Window = t %/% 200) %>%
group_by(n, Set, Window) %>%
summarise(Task1 = mean(Task1),
Task2 = mean(Task2),
Inactive = mean(Inactive)) %>%
mutate(Task1Diff = abs(Task1 - lag(Task1)),
Task2Diff = abs(Task2 - lag(Task2)),
InactiveDiff = abs(Inactive - lag(Inactive)),
BeginSet = !duplicated(Set))
# Make sure first diff row of each new set is NA
sets <- which(tallyFluct$BeginSet == TRUE)
tallyFluct$Task1Diff[sets] <- NA
tallyFluct$Task2Diff[sets] <- NA
tallyFluct$InactiveDiff[sets] <- NA
# Summarise by colony/set
tallyFluct <- tallyFluct %>%
group_by(n, Set) %>%
summarise(Task1Fluct = mean(Task1Diff, na.rm = TRUE),
Task2Fluct = mean(Task2Diff, na.rm = TRUE),
InactiveFluct = mean(InactiveDiff, na.rm = TRUE)) %>%
mutate(GroupSizeFactor = factor(n, levels = sort(unique(n))))
# Summarise by n
tallySumFluct <- tallyFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(Task1FluctMean = mean(Task1Fluct, na.rm = TRUE),
Task1FluctSE = sd(Task1Fluct) / sqrt(length(Task1Fluct)),
Task2FluctMean = mean(Task2Fluct, na.rm = TRUE),
Task2FluctSE = sd(Task2Fluct, na.rm = TRUE) / sqrt(length(Task2Fluct)),
InactiveFluctMean = mean(InactiveFluct, na.rm = TRUE),
InactiveFluctSE = sd(InactiveFluct, na.rm = TRUE) / sqrt(length(InactiveFluct)))
tallySumFluct <- as.data.frame(tallySumFluct)
tallySumFluct <- tallySumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
# Plot
gg_fluct <- ggplot() +
# geom_point(data = tallyFluct,
#            aes(x = n, y = Task1Fluct),
#            fill = "grey50",
#            colour = "grey50",
#            size = 0.5,
#            position = position_jitter(width = 0.2),
#            alpha = 0.4,
#            stroke = 0) +
theme_classic() +
labs(x = "Group size",
y = "Task fluctuation") +
scale_x_continuous(breaks = unique(tallyFluct$n),
labels = c(1, "", 4, "", 8, "", 16)) +
scale_y_continuous(breaks = seq(0, 0.2, 0.01),
limits = c(0, 0.0515),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE),
colour= "black",
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean),
colour = "black",
size = 0.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 8, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_fluct
# Combined plot
svg("output/MSFigures/TaskAndStimFluctuationsCombined_errorbars.svg",  width = 2.8, height = 2.07)
multiplot(gg_stimfluct, gg_fluct, cols = 2)
dev.off()
multiplot(gg_stimfluct, gg_fluct, cols = 2)
# Combined plot
png("output/MSFigures/TaskAndStimFluctuationsCombined_errorbars.png",  width = 2.8, height = 2.07)
multiplot(gg_stimfluct, gg_fluct, cols = 2)
dev.off()
# Combined plot
png("output/MSFigures/TaskAndStimFluctuationsCombined_errorbars.png",  width = 2.8, height = 2.07)
dev.off()
# Combined plot
png("output/MSFigures/TaskAndStimFluctuationsCombined_errorbars.png",  width = 2.8, height = 2.07)
multiplot(gg_stimfluct, gg_fluct, cols = 2)
dev.off()
multiplot(gg_stimfluct, gg_fluct, cols = 2)
# Combined plot
png("output/MSFigures/TaskAndStimFluctuationsCombined_errorbars.png",  width = 2.8, height = 2.07)
multiplot(gg_stimfluct, gg_fluct, cols = 2)
dev.off()
# Combined plot
png("output/MSFigures/TaskAndStimFluctuationsCombined_errorbars.png",  width = 2.8, height = 2.07, res = 600)
multiplot(gg_stimfluct, gg_fluct, cols = 2)
dev.off()
# Combined plot
png("output/MSFigures/TaskAndStimFluctuationsCombined_errorbars.png",  width = 2.8, height = 2.07, units = "in")
multiplot(gg_stimfluct, gg_fluct, cols = 2)
dev.off()
# Combined plot
png("output/MSFigures/TaskAndStimFluctuationsCombined_errorbars.png",  width = 2.8, height = 2.07, units = "in")
# Combined plot
png("output/MSFigures/TaskAndStimFluctuationsCombined_errorbars.png",  width = 2.8, height = 2.07, units = "in", res = 600)
multiplot(gg_stimfluct, gg_fluct, cols = 2)
dev.off()
