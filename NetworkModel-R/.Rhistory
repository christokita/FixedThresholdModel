position = position_dodge(width = 1),
alpha = 0.4,
stroke = 0) +
theme_classic() +
labs(x = "Group Size",
y = "Mean Fluctuation In\nTask Performance") +
scale_x_continuous(breaks = unique(tallyFluct$n)) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05),
limits = c(0, 0.45),
expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1MeanMean - Task1MeanSE,
ymax = Task1MeanMean + Task1MeanSE),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1MeanMean),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_fluct
gg_fluct <- ggplot() +
geom_point(data = tallyFluct,
aes(x = n, y = Task1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
position = position_dodge(width = 1),
alpha = 0.4,
stroke = 0) +
theme_classic() +
labs(x = "Group Size",
y = "Mean Fluctuation In\nTask Performance") +
scale_x_continuous(breaks = unique(tallyFluct$n)) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05),
limits = c(0, 0.38),
expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1MeanMean - Task1MeanSE,
ymax = Task1MeanMean + Task1MeanSE),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1MeanMean),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"))
gg_fluct
gg_fluct <- ggplot() +
geom_point(data = tallyFluct,
aes(x = n, y = Task1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
position = position_dodge(width = 1),
alpha = 0.4,
stroke = 0) +
theme_classic() +
labs(x = "Group Size",
y = "Mean Fluctuation In\nTask Performance") +
scale_x_continuous(breaks = unique(tallyFluct$n)) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05),
limits = c(0, 0.38),
expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1MeanMean - Task1MeanSE,
ymax = Task1MeanMean + Task1MeanSE),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1MeanMean),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm")) +
annotate(geom = "text",
x = 15, y = 0.03,
label = "Variance",
size = 2) +
annotate(geom = "text",
x = 15, y = 0.32,
label = "Mean",
size = 2)
gg_fluct
gg_fluct <- ggplot() +
geom_point(data = tallyFluct,
aes(x = n, y = Task1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
position = position_dodge(width = 1),
alpha = 0.4,
stroke = 0) +
theme_classic() +
labs(x = "Group Size",
y = "Mean Fluctuation In\nTask Performance") +
scale_x_continuous(breaks = unique(tallyFluct$n)) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05),
limits = c(0, 0.38),
expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1MeanMean - Task1MeanSE,
ymax = Task1MeanMean + Task1MeanSE),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1MeanMean),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm")) +
annotate(geom = "text",
x = 15, y = 0.03,
label = "Variance",
size = 2) +
annotate(geom = "text",
x = 15, y = 0.31,
label = "Mean",
size = 2)
gg_fluct
gg_fluct <- ggplot() +
geom_point(data = tallyFluct,
aes(x = n, y = Task1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
position = position_dodge(width = 1),
alpha = 0.4,
stroke = 0) +
theme_classic() +
labs(x = "Group Size",
y = "Mean Fluctuation In\nTask Performance") +
scale_x_continuous(breaks = unique(tallyFluct$n)) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05),
limits = c(0, 0.38),
expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1MeanMean - Task1MeanSE,
ymax = Task1MeanMean + Task1MeanSE),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1MeanMean),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm")) +
annotate(geom = "text",
x = 15, y = 0.03,
label = "Variance",
size = 2) +
annotate(geom = "text",
x = 15, y = 0.315,
label = "Mean",
size = 2)
gg_fluct
ggsave("output/MSFigures/TaskPerformanceFluctuations_VARIANCE.png", width = 2.82, height = 2.05, units = "in", dpi = 600)
gg_fluct <- ggplot() +
geom_point(data = tallyFluct,
aes(x = n, y = Task1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
position = position_dodge(width = 1),
alpha = 0.4,
stroke = 0) +
theme_classic() +
labs(x = "Group Size",
y = "Task Performance") +
scale_x_continuous(breaks = unique(tallyFluct$n)) +
scale_y_continuous(breaks = seq(0, 0.5, 0.05),
limits = c(0, 0.38),
expand = c(0, 0)) +
scale_fill_manual(values = palette) +
scale_colour_manual(values = palette) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE,
colour = GroupSizeFactor),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean, colour = GroupSizeFactor, fill = GroupSizeFactor),
size = 1.5) +
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1MeanMean - Task1MeanSE,
ymax = Task1MeanMean + Task1MeanSE),
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1MeanMean),
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 6, margin = margin(5, 6, 5, -2)),
axis.text.x = element_text(size = 6, margin = margin(6, 5, -2, 5)),
axis.title = element_text(size = 6, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm")) +
annotate(geom = "text",
x = 15, y = 0.03,
label = "Variance",
size = 2) +
annotate(geom = "text",
x = 15, y = 0.315,
label = "Mean",
size = 2)
gg_fluct
ggsave("output/MSFigures/TaskPerformanceFluctuations_VARIANCE.png", width = 2.82, height = 2.05, units = "in", dpi = 600)
rm(list = ls())
source("scripts/__Util__MASTER.R")
library(scales)
library(RColorBrewer)
####################
# Prep and Plot
####################
##### Delta 06 #####
# load
load("output/ParameterExploration/Rdata/FixedDelta06_SigmaSlopeExplorationEXTRA.Rdata")
improve1 <- improve %>%
mutate(relativePercInc = (PercIncrease - 1.220554) / 1.220554,
relativeSlope   = (SlopeIncrease - 0.02322321) / 0.02322321,
relativeLarge   = (SpecLarge - 0.5915000) / 0.5915000,
relativeSmall   = (SpecSmall - 0.2663750) / 0.2663750,
Increase        = SlopeIncrease * 14) %>%
mutate(fit = (abs(relativeLarge) + abs(relativeSmall) + abs(relativeSlope)) / 3,
fitRMSE = sqrt( (relativeLarge^2 + relativeSmall^2 + relativeSlope^2) / 3 ))
load("output/ParameterExploration/Rdata/FixedDelta06_SigmaSlopeExplorationEXTRA2.Rdata")
improve2 <- improve %>%
mutate(relativePercInc = (PercIncrease - 1.220554) / 1.220554,
relativeSlope   = (SlopeIncrease - 0.02322321) / 0.02322321,
relativeLarge   = (SpecLarge - 0.5915000) / 0.5915000,
relativeSmall   = (SpecSmall - 0.2663750) / 0.2663750,
Increase        = SlopeIncrease * 14) %>%
mutate(fit = (abs(relativeLarge) + abs(relativeSmall) + abs(relativeSlope)) / 3,
fitRMSE = sqrt( (relativeLarge^2 + relativeSmall^2 + relativeSlope^2) / 3 ))
load("output/ParameterExploration/Rdata/FixedDelta06_SigmaSlopeExploration.Rdata")
improve <- improve %>%
mutate(relativePercInc = (PercIncrease - 1.220554) / 1.220554,
relativeSlope   = (SlopeIncrease - 0.02322321) / 0.02322321,
relativeLarge   = (SpecLarge - 0.5915000) / 0.5915000,
relativeSmall   = (SpecSmall - 0.2663750) / 0.2663750,
Increase        = SlopeIncrease * 14) %>%
mutate(fit = (abs(relativeLarge) + abs(relativeSmall) + abs(relativeSlope)) / 3,
fitRMSE = sqrt( (relativeLarge^2 + relativeSmall^2 + relativeSlope^2) / 3 ))
improve06 <- rbind(improve, improve1, improve2)
rm(improve, improve1, improve2)
# Filter to size
improve06 <- improve06 %>%
filter(!sigma %in% c(0.075, 0.125, 0.175, 0.225, 0.275, 0.325))
View(improve06)
rm(list = ls())
source("scripts/__Util__MASTER.R")
library(RColorBrewer)
library(scales)
load("output/SpecializationMetrics/Rdata/FixedDelta06Sigma01Eta7100reps.Rdata")
tallies <- unlist(groups_taskTally, recursive = FALSE)
tallies <- do.call("rbind", tallies)
tallyFluct <- tallies %>%
mutate(Task1 = Task1 / n,
Task2 = Task2 / n,
Inactive = Inactive / n,
Set = paste0(n, "-", replicate),
Window = t %/% 1) %>%
group_by(n, Set, Window) %>%
summarise(Task1 = mean(Task1),
Task2 = mean(Task2),
Inactive = mean(Inactive)) %>%
mutate(Task1Diff = abs(Task1 - lag(Task1)),
Task2Diff = abs(Task2 - lag(Task2)),
InactiveDiff = abs(Inactive - lag(Inactive)),
BeginSet = !duplicated(Set))
tallyFluct <- tallies %>%
mutate(Task1 = Task1 / n,
Task2 = Task2 / n,
Inactive = Inactive / n,
Set = paste0(n, "-", replicate),
Window = t %/% 200) %>%
group_by(n, Set, Window) %>%
summarise(Task1 = mean(Task1),
Task2 = mean(Task2),
Inactive = mean(Inactive)) %>%
mutate(Task1Diff = abs(Task1 - lag(Task1)),
Task2Diff = abs(Task2 - lag(Task2)),
InactiveDiff = abs(Inactive - lag(Inactive)),
BeginSet = !duplicated(Set))
sets <- which(tallyFluct$BeginSet == TRUE)
tallyFluct$Task1Diff[sets] <- NA
tallyFluct$Task2Diff[sets] <- NA
tallyFluct$InactiveDiff[sets] <- NA
tallyFluct <- tallyFluct %>%
group_by(n, Set) %>%
summarise(Task1Fluct = mean(Task1Diff, na.rm = TRUE),
Task2Fluct = mean(Task2Diff, na.rm = TRUE),
InactiveFluct = mean(InactiveDiff, na.rm = TRUE)) %>%
mutate(GroupSizeFactor = factor(n, levels = sort(unique(n))))
tallySumFluct <- tallyFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(Task1FluctMean = mean(Task1Fluct, na.rm = TRUE),
Task1FluctSE = sd(Task1Fluct, na.rm = TRUE) / sqrt(length(Task1Fluct)),
Task2FluctMean = mean(Task2Fluct, na.rm = TRUE),
Task2FluctSE = sd(Task2Fluct, na.rm = TRUE) / sqrt(length(Task2Fluct)),
InactiveFluctMean = mean(InactiveFluct, na.rm = TRUE),
InactiveFluctSE = sd(InactiveFluct, na.rm = TRUE) / sqrt(length(InactiveFluct)))
tallySumFluct <- as.data.frame(tallySumFluct)
tallySumFluct <- tallySumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
View(tallySumFluct)
tallySumFluct <- tallyFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(Task1FluctMean = mean(Task1Fluct, na.rm = TRUE),
Task1FluctSE = sd(Task1Fluct) / sqrt(length(Task1Fluct)),
Task2FluctMean = mean(Task2Fluct, na.rm = TRUE),
Task2FluctSE = sd(Task2Fluct, na.rm = TRUE) / sqrt(length(Task2Fluct)),
InactiveFluctMean = mean(InactiveFluct, na.rm = TRUE),
InactiveFluctSE = sd(InactiveFluct, na.rm = TRUE) / sqrt(length(InactiveFluct)))
tallySumFluct <- as.data.frame(tallySumFluct)
tallySumFluct <- tallySumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
View(tallySumFluct)
0.006/0.04
tallySumFluct <- tallyFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(Task1FluctMean = mean(Task1Fluct, na.rm = TRUE),
Task1FluctSE = sd(Task1Fluct) ,
Task2FluctMean = mean(Task2Fluct, na.rm = TRUE),
Task2FluctSE = sd(Task2Fluct, na.rm = TRUE) / sqrt(length(Task2Fluct)),
InactiveFluctMean = mean(InactiveFluct, na.rm = TRUE),
InactiveFluctSE = sd(InactiveFluct, na.rm = TRUE) / sqrt(length(InactiveFluct)))
tallySumFluct <- as.data.frame(tallySumFluct)
tallySumFluct <- tallySumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
View(tallySumFluct)
tallyFluct <- tallies %>%
mutate(Task1 = Task1 / n,
Task2 = Task2 / n,
Inactive = Inactive / n,
Set = paste0(n, "-", replicate),
Window = t %/% 1) %>%
group_by(n, Set, Window) %>%
summarise(Task1 = mean(Task1),
Task2 = mean(Task2),
Inactive = mean(Inactive)) %>%
mutate(Task1Diff = abs(Task1 - lag(Task1)),
Task2Diff = abs(Task2 - lag(Task2)),
InactiveDiff = abs(Inactive - lag(Inactive)),
BeginSet = !duplicated(Set))
sets <- which(tallyFluct$BeginSet == TRUE)
tallyFluct$Task1Diff[sets] <- NA
tallyFluct$Task2Diff[sets] <- NA
tallyFluct$InactiveDiff[sets] <- NA
tallyFluct <- tallyFluct %>%
group_by(n, Set) %>%
summarise(Task1Fluct = mean(Task1Diff, na.rm = TRUE),
Task2Fluct = mean(Task2Diff, na.rm = TRUE),
InactiveFluct = mean(InactiveDiff, na.rm = TRUE)) %>%
mutate(GroupSizeFactor = factor(n, levels = sort(unique(n))))
tallySumFluct <- tallyFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(Task1FluctMean = mean(Task1Fluct, na.rm = TRUE),
Task1FluctSE = sd(Task1Fluct) / sqrt(length(Task1Fluct)),
Task2FluctMean = mean(Task2Fluct, na.rm = TRUE),
Task2FluctSE = sd(Task2Fluct, na.rm = TRUE) / sqrt(length(Task2Fluct)),
InactiveFluctMean = mean(InactiveFluct, na.rm = TRUE),
InactiveFluctSE = sd(InactiveFluct, na.rm = TRUE) / sqrt(length(InactiveFluct)))
tallySumFluct <- as.data.frame(tallySumFluct)
tallySumFluct <- tallySumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
View(tallySumFluct)
View(tallies)
tallyFluct <- tallies %>%
mutate(Task1 = Task1 / n,
Task2 = Task2 / n,
Inactive = Inactive / n,
Set = paste0(n, "-", replicate),
Window = t %/% 1) %>%
group_by(n, Set, Window) %>%
summarise(Task1 = mean(Task1),
Task2 = mean(Task2),
Inactive = mean(Inactive)) %>%
mutate(Task1Diff = abs(Task1 - lag(Task1)),
Task2Diff = abs(Task2 - lag(Task2)),
InactiveDiff = abs(Inactive - lag(Inactive)),
BeginSet = !duplicated(Set))
View(tallyFluct)
sd(x = c(0.5, 0.4, 0.3, 0.32, 0.42))
sd(x = c(0.5, 0.4, 0.3, 0.33, 0.4))
