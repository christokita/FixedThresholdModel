})
entropy <- do.call("rbind", entropy)  %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx)
entropy <- entropy[entropy$n != 1,]
# Unlist
taskCorrTot <- do.call("rbind", groups_taskCorr)
taskCorrTot <- taskCorrTot %>%
mutate(TaskMean = (Task1 + Task2) / 2) %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Task1, -Task2)
####################
# Task Performance Specialization
####################
taskSpec <- groups_specialization %>%
group_by(n, replicate) %>%
summarise(SpecMean = mean(TransSpec))  %>%
mutate(set = paste(n, replicate, sep = "-"))
####################
# Bind together and summarise
####################
# Bind
metrics <- merge(taskCorrTot, entropy)
metrics <- merge(metrics, taskSpec)
# Summarise
metrics <- metrics %>%
melt(., id.vars = c("n", "replicate", "set"))
names(metrics) <- c("n", "replicate", "set", "metric", "value")
metrics <- metrics %>%
group_by(n, metric) %>%
summarise(Mean = mean(value),
SE = sd(value) / sqrt(length(value)))
names(metrics) <- c("n", "metric", "Mean", "SE")
levels(metrics$metric) <-c("Rank Correlation", "Task Entropy", "Task Consistency")
View(metrics)
gg_metric <- ggplot(data = metrics, aes(x = n, y = Mean, group = metric)) +
geom_hline(aes(yintercept = 0),
colour = "grey30",
size = 0.25) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
width = 0.7) +
geom_line(aes(y = Mean, linetype = metric)) +
geom_point(aes(y = Mean, fill = metric),
size = 1.5,
shape = 21) +
theme_classic() +
xlab("Group Size") +
ylab("Value") +
scale_y_continuous(limits = c(-0.05, 0.65),
breaks = seq(0, 1, 0.2)) +
scale_x_continuous(breaks = unique(metrics$n)) +
scale_fill_manual(name = "Metric",
values = c("black", "white", "white")) +
scale_linetype_manual(name = "Metric",
values = c("solid", "dashed", "dotted")) +
theme(legend.position = "none",
legend.title = element_text(size = 7, face = "bold"),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, "cm"),
legend.text = element_text(size = 10),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.ticks = element_line(size = 0.5),
panel.grid = element_blank(),
strip.text = element_text(size = 8, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_wrap(~ metric)
gg_metric
ggsave(gg_metric, file = "output/SpecializationMetrics/Plots/AllMetricsComparison_TEST.png", height = 2.1, width = 5, units = "in", dpi = 800)
mutualEntropy()
mutualEntropy
taskDist <- unlist(groups_taskDist, recursive = FALSE)
taskDistTot <- do.call("rbind", taskDist)
taskDistTot[ ,1:2] <- taskDistTot[ ,1:2] * 10000
taskDistTot <- taskDistTot %>%
mutate(Set = paste0(n, "-", replicate)) %>%
arrange(n, replicate)
sets <- unique(taskDistTot$Set)
entropy <- lapply(sets, function(i) {
# Grab task dist dataframe for set
taskDist <- taskDistTot[taskDistTot$Set == i, ]
n <- taskDist$n[1]
replicate <- taskDist$replicate[1]
# Calcualte entropy
taskDist <- taskDist[ ,1:2]
entropy <- mutualEntropy(taskDist)
entropy$n <- n
entropy$replicate <- replicate
return(entropy)
})
entropy <- do.call("rbind", entropy)  %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx)
entropy <- entropy %>% filter(n != 1)
# Unlist
taskCorrTot <- do.call("rbind", groups_taskCorr)
taskCorrTot <- taskCorrTot %>%
mutate(TaskMean = (Task1 + Task2) / 2) %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Task1, -Task2)
####################
# Task Performance Specialization
####################
taskSpec <- groups_specialization %>%
group_by(n, replicate) %>%
summarise(SpecMean = mean(TransSpec))  %>%
mutate(set = paste(n, replicate, sep = "-"))
####################
# Bind together and summarise
####################
# Bind
metrics <- merge(taskCorrTot, entropy)
metrics <- merge(metrics, taskSpec)
# Summarise
metrics <- metrics %>%
melt(., id.vars = c("n", "replicate", "set"))
names(metrics) <- c("n", "replicate", "set", "metric", "value")
metrics <- metrics %>%
group_by(n, metric) %>%
summarise(Mean = mean(value),
SE = sd(value) / sqrt(length(value)))
names(metrics) <- c("n", "metric", "Mean", "SE")
levels(metrics$metric) <-c("Rank Correlation", "Task Entropy", "Task Consistency")
####################
# Plot
####################
gg_metric <- ggplot(data = metrics, aes(x = n, y = Mean, group = metric)) +
geom_hline(aes(yintercept = 0),
colour = "grey30",
size = 0.25) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
width = 0.7) +
geom_line(aes(y = Mean, linetype = metric)) +
geom_point(aes(y = Mean, fill = metric),
size = 1.5,
shape = 21) +
theme_classic() +
xlab("Group Size") +
ylab("Value") +
scale_y_continuous(limits = c(-0.05, 0.65),
breaks = seq(0, 1, 0.2)) +
scale_x_continuous(breaks = unique(metrics$n)) +
scale_fill_manual(name = "Metric",
values = c("black", "white", "white")) +
scale_linetype_manual(name = "Metric",
values = c("solid", "dashed", "dotted")) +
theme(legend.position = "none",
legend.title = element_text(size = 7, face = "bold"),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, "cm"),
legend.text = element_text(size = 10),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.ticks = element_line(size = 0.5),
panel.grid = element_blank(),
strip.text = element_text(size = 8, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_wrap(~ metric)
gg_metric
entropy1 <- entropy
entropy <- do.call("rbind", entropy)  %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx)
entropy <- unlist(groups_entropy, recursive = FALSE)
entropy <- do.call("rbind", entropy)  %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx)
entropy[400,]
entropy1[400,]
View(entropy)
entropy <- unlist(groups_entropy, recursive = FALSE)
entropy <- do.call("rbind", entropy)  %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx) %>%
filter(n != 1)
entropy[400,]
entropy1[400,]
entropy1[400:410,]
entropy[400:410,]
metrics1 <- metrics
####################
# Task Rank Correlation
####################
# Unlist
taskCorrTot <- do.call("rbind", groups_taskCorr)
taskCorrTot <- taskCorrTot %>%
mutate(TaskMean = (Task1 + Task2) / 2) %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Task1, -Task2)
####################
# Task Performance Specialization
####################
taskSpec <- groups_specialization %>%
group_by(n, replicate) %>%
summarise(SpecMean = mean(TransSpec))  %>%
mutate(set = paste(n, replicate, sep = "-"))
####################
# Bind together and summarise
####################
# Bind
metrics <- merge(taskCorrTot, entropy)
metrics <- merge(metrics, taskSpec)
# Summarise
metrics <- metrics %>%
melt(., id.vars = c("n", "replicate", "set"))
names(metrics) <- c("n", "replicate", "set", "metric", "value")
metrics <- metrics %>%
group_by(n, metric) %>%
summarise(Mean = mean(value),
SE = sd(value) / sqrt(length(value)))
names(metrics) <- c("n", "metric", "Mean", "SE")
levels(metrics$metric) <-c("Rank Correlation", "Task Entropy", "Task Consistency")
#####
metrics1
metrics
View(metrics)
View(metrics1)
rm(list = ls())
source("scripts/__Util__MASTER.R")
source("scripts/3A_PrepPlotExperimentData.R")
load("output/__RData/FixedDelta06Sigma01Eta7100reps.Rdata")
# bind task distributions into mega dataframe
taskDist <- unlist(groups_taskDist, recursive = FALSE)
taskDistTot <- do.call("rbind", taskDist)
taskDistTot[ ,1:2] <- taskDistTot[ ,1:2] * 10000
taskDistTot <- taskDistTot %>%
mutate(Set = paste0(n, "-", replicate)) %>%
arrange(n, replicate)
sets <- unique(taskDistTot$Set)
entropy <- lapply(sets, function(i) {
# Grab task dist dataframe for set
taskDist <- taskDistTot[taskDistTot$Set == i, ]
n <- taskDist$n[1]
replicate <- taskDist$replicate[1]
# Calcualte entropy
taskDist <- taskDist[ ,1:2]
entropy <- mutualEntropy(taskDist)
entropy$n <- n
entropy$replicate <- replicate
return(entropy)
})
load("output/SpecializationMetrics/Rdata/FixedDelta06Sigma01Eta7100reps.Rdata")
library(RColorBrewer)
library(scales)
entropy <- do.call("rbind", entropy)  %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx) %>%
filter(n != 1)
####################
# Task Rank Correlation
####################
# Unlist
taskCorrTot <- do.call("rbind", groups_taskCorr)
taskCorrTot <- taskCorrTot %>%
mutate(TaskMean = (Task1 + Task2) / 2) %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Task1, -Task2)
####################
# Task Performance Specialization
####################
taskSpec <- groups_specialization %>%
group_by(n, replicate) %>%
summarise(SpecMean = mean(TransSpec))  %>%
mutate(set = paste(n, replicate, sep = "-"))
####################
# Bind together and summarise
####################
# Bind
metrics <- merge(taskCorrTot, entropy)
metrics <- merge(metrics, taskSpec)
# Summarise
metrics <- metrics %>%
melt(., id.vars = c("n", "replicate", "set"))
names(metrics) <- c("n", "replicate", "set", "metric", "value")
metrics <- metrics %>%
group_by(n, metric) %>%
summarise(Mean = mean(value),
SE = sd(value) / sqrt(length(value)))
names(metrics) <- c("n", "metric", "Mean", "SE")
levels(metrics$metric) <-c("Rank Correlation", "Task Entropy", "Task Consistency")
####################
# Plot
####################
gg_metric <- ggplot(data = metrics, aes(x = n, y = Mean, group = metric)) +
geom_hline(aes(yintercept = 0),
colour = "grey30",
size = 0.25) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
width = 0.7) +
geom_line(aes(y = Mean, linetype = metric)) +
geom_point(aes(y = Mean, fill = metric),
size = 1.5,
shape = 21) +
theme_classic() +
xlab("Group Size") +
ylab("Value") +
scale_y_continuous(limits = c(-0.05, 0.65),
breaks = seq(0, 1, 0.2)) +
scale_x_continuous(breaks = unique(metrics$n)) +
scale_fill_manual(name = "Metric",
values = c("black", "white", "white")) +
scale_linetype_manual(name = "Metric",
values = c("solid", "dashed", "dotted")) +
theme(legend.position = "none",
legend.title = element_text(size = 7, face = "bold"),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, "cm"),
legend.text = element_text(size = 10),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.ticks = element_line(size = 0.5),
panel.grid = element_blank(),
strip.text = element_text(size = 8, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_wrap(~ metric)
gg_metric
ggsave(gg_metric, file = "output/SpecializationMetrics/Plots/AllMetricsComparison_TEST.png", height = 2.1, width = 5, units = "in", dpi = 800)
rm(list = ls())
source("scripts/__Util__MASTER.R")
source("scripts/3A_PrepPlotExperimentData.R")
load("output/__RData/FixedDelta06Sigma01Eta7100reps.Rdata")
# bind task distributions into mega dataframe
taskDist <- unlist(groups_taskDist, recursive = FALSE)
taskDistTot <- do.call("rbind", taskDist)
taskDistTot[ ,1:2] <- taskDistTot[ ,1:2] * 10000
taskDistTot <- taskDistTot %>%
mutate(Set = paste0(n, "-", replicate)) %>%
arrange(n, replicate)
sets <- unique(taskDistTot$Set)
mutualEntropy
entropy <- lapply(sets, function(i) {
# Grab task dist dataframe for set
taskDist <- taskDistTot[taskDistTot$Set == i, ]
n <- taskDist$n[1]
replicate <- taskDist$replicate[1]
# Calcualte entropy
taskDist <- taskDist[ ,1:2]
entropy <- mutualEntropy(taskDist)
entropy$n <- n
entropy$replicate <- replicate
return(entropy)
})
entropy1
entropy1 <- entropy
# Unlist
entropy <- unlist(groups_entropy, recursive = FALSE)
entropy <- do.call("rbind", entropy)  %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx) %>%
filter(n != 1)
####################
names(entropy)
names(entropy1)
entropy1 <- unlist(entropy1)
entropy1 <- do.call("rbind", entropy1)
entropy <- lapply(sets, function(i) {
# Grab task dist dataframe for set
taskDist <- taskDistTot[taskDistTot$Set == i, ]
n <- taskDist$n[1]
replicate <- taskDist$replicate[1]
# Calcualte entropy
taskDist <- taskDist[ ,1:2]
entropy <- mutualEntropy(taskDist)
entropy$n <- n
entropy$replicate <- replicate
return(entropy)
})
entropy1 <- do.call("rbind", entropy1)
entropy1 <- do.call("rbind", entropy)
# Unlist
entropy <- unlist(groups_entropy, recursive = FALSE)
entropy <- do.call("rbind", entropy)  %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx) %>%
filter(n != 1)
entropy
names(entropy1)
names(entropy)
entropy1 <- entropy1 %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx) %>%
filter(n != 1)
table(entropy1 == entropy)
entropy1 <- entropy1 %>% arrange(set)
names(entropy1)
names(entropy)
entropy <- entropy %>% arrange(set)
head(entropy$Dxy)
head(entropy1$Dxy)
table(entropy$Dxy == entropy1$Dxy)
entropy <- entropy1
####################
# Task Rank Correlation
####################
# Unlist
taskCorrTot <- do.call("rbind", groups_taskCorr)
taskCorrTot <- taskCorrTot %>%
mutate(TaskMean = (Task1 + Task2) / 2) %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Task1, -Task2)
####################
# Task Performance Specialization
####################
taskSpec <- groups_specialization %>%
group_by(n, replicate) %>%
summarise(SpecMean = mean(TransSpec))  %>%
mutate(set = paste(n, replicate, sep = "-"))
####################
# Bind together and summarise
####################
# Bind
metrics <- merge(taskCorrTot, entropy)
metrics <- merge(metrics, taskSpec)
# Summarise
metrics <- metrics %>%
melt(., id.vars = c("n", "replicate", "set"))
names(metrics) <- c("n", "replicate", "set", "metric", "value")
metrics <- metrics %>%
group_by(n, metric) %>%
summarise(Mean = mean(value),
SE = sd(value) / sqrt(length(value)))
names(metrics) <- c("n", "metric", "Mean", "SE")
levels(metrics$metric) <-c("Rank Correlation", "Task Entropy", "Task Consistency")
####################
# Plot
####################
gg_metric <- ggplot(data = metrics, aes(x = n, y = Mean, group = metric)) +
geom_hline(aes(yintercept = 0),
colour = "grey30",
size = 0.25) +
geom_errorbar(aes(ymin = Mean - SE, ymax = Mean + SE),
width = 0.7) +
geom_line(aes(y = Mean, linetype = metric)) +
geom_point(aes(y = Mean, fill = metric),
size = 1.5,
shape = 21) +
theme_classic() +
xlab("Group Size") +
ylab("Value") +
scale_y_continuous(limits = c(-0.05, 0.65),
breaks = seq(0, 1, 0.2)) +
scale_x_continuous(breaks = unique(metrics$n)) +
scale_fill_manual(name = "Metric",
values = c("black", "white", "white")) +
scale_linetype_manual(name = "Metric",
values = c("solid", "dashed", "dotted")) +
theme(legend.position = "none",
legend.title = element_text(size = 7, face = "bold"),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0.1, r = 0.1, b = 0.1, l = 0.1, "cm"),
legend.text = element_text(size = 10),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10),
axis.ticks = element_line(size = 0.5),
panel.grid = element_blank(),
strip.text = element_text(size = 8, face = "italic"),
strip.background = element_rect(fill = NA, colour = NA),
panel.spacing = unit(0.5, "cm")) +
facet_wrap(~ metric)
gg_metric
ggsave(gg_metric, file = "output/SpecializationMetrics/Plots/AllMetricsComparison_TEST.png", height = 2.1, width = 5, units = "in", dpi = 800)
metrics1 <- metrics
####################
# Compare entropies
####################
# Unlist
entropy <- unlist(groups_entropy, recursive = FALSE)
entropy <- do.call("rbind", entropy)  %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Dsym, -Dyx) %>%
filter(n != 1)
####################
# Task Rank Correlation
####################
# Unlist
taskCorrTot <- do.call("rbind", groups_taskCorr)
taskCorrTot <- taskCorrTot %>%
mutate(TaskMean = (Task1 + Task2) / 2) %>%
mutate(set = paste(n, replicate, sep = "-"))%>%
select(-Task1, -Task2)
####################
# Task Performance Specialization
####################
taskSpec <- groups_specialization %>%
group_by(n, replicate) %>%
summarise(SpecMean = mean(TransSpec))  %>%
mutate(set = paste(n, replicate, sep = "-"))
####################
# Bind together and summarise
####################
# Bind
metrics <- merge(taskCorrTot, entropy)
metrics <- merge(metrics, taskSpec)
# Summarise
metrics <- metrics %>%
melt(., id.vars = c("n", "replicate", "set"))
names(metrics) <- c("n", "replicate", "set", "metric", "value")
metrics <- metrics %>%
group_by(n, metric) %>%
summarise(Mean = mean(value),
SE = sd(value) / sqrt(length(value)))
names(metrics) <- c("n", "metric", "Mean", "SE")
levels(metrics$metric) <-c("Rank Correlation", "Task Entropy", "Task Consistency")
View(metrics)
View(metrics1)
