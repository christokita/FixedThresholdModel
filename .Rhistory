})
# Bind
noTaskPerf <- do.call("rbind", noTaskPerf)
noTaskPerf <- noTaskPerf %>%
group_by(n) %>%
mutate(noTask1 = noTask1 / 10000,
noTask2 = noTask2 / 10000,
noTaskAvg = noTaskAvg / 10000) %>%
summarise(TaskNegelectMean = mean(noTaskAvg, na.rm = TRUE),
TaskNegelectSE = ( sd(noTaskAvg) / sqrt(length(noTaskAvg)) )) %>%
mutate(Source = "Full Model")
taskNeglect_all <- rbind(taskNeglect_all, noTaskPerf)
taskNeglect_all$Source <- factor(taskNeglect_all$Source, levels = c("Deterministic",
"Prob. Updating",
"Prob. Quitting",
"Prob. Thresholds",
"Threshold Variation",
"Full Model"))
# Plot all
gg_models <- ggplot(data = stimFluct_all) +
geom_line(aes(x = n, y = sFluctMean, colour = Source)) +
geom_errorbar(aes(x = n, ymin = sFluctMean - sFluctSE, ymax = sFluctMean + sFluctSE, colour = Source),
width = 1) +
geom_point(aes(x = n, y = sFluctMean, colour = Source),
size = 1.5) +
theme_classic() +
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = unique(stimFluct_all$n)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.95), breaks = seq(0, 1, 0.2)) +
xlab("Group size") +
ylab("Stimulus fluctuation") +
theme(legend.position = "right",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 8),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2), color = "black"),
axis.text.x = element_text(size = 8, margin = margin(6, 5, -2, 5), color = "black"),
axis.title = element_text(size = 2, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
aspect.ratio = 1)
gg_models
# Plot all
gg_models <- ggplot(data = taskNeglect_all) +
geom_line(aes(x = n, y = TaskNegelectMean, colour = Source)) +
geom_errorbar(aes(x = n, ymin = TaskNegelectMean - TaskNegelectSE, ymax = TaskNegelectMean + TaskNegelectSE, colour = Source),
width = 1) +
geom_point(aes(x = n, y = TaskNegelectMean, colour = Source),
size = 1.5) +
theme_classic() +
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = unique(taskNeglect_all$n)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.8)) +
xlab("Group size") +
ylab("Task negelect") +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 10),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2), color = "black"),
axis.text.x = element_text(size = 8, margin = margin(6, 5, -2, 5), color = "black"),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
aspect.ratio = 1)
gg_models
ggsave("output/StochasticElements/TaskNeglectByModelType.png", width = 2, height = 2, dpi = 600, unit = "in")
source('~/Documents/Research/Tarnita Lab/Incipient Groups DOL/DOLThresholdModel/scripts/other_scripts/ComparingStimFluctuations.R', echo=TRUE)
# Plot all
gg_models <- ggplot(data = stimFluct_all) +
geom_line(aes(x = n, y = sFluctMean, colour = Source)) +
geom_errorbar(aes(x = n, ymin = sFluctMean - sFluctSE, ymax = sFluctMean + sFluctSE, colour = Source),
width = 1) +
geom_point(aes(x = n, y = sFluctMean, colour = Source),
size = 1.5) +
theme_classic() +
scale_color_brewer(palette = "Set2") +
scale_x_continuous(breaks = unique(stimFluct_all$n)) +
scale_y_continuous(expand = c(0, 0), limits = c(0, 0.95), breaks = seq(0, 1, 0.2)) +
xlab("Group size") +
ylab("Stimulus fluctuation") +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 8),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text.y = element_text(size = 8, margin = margin(5, 6, 5, -2), color = "black"),
axis.text.x = element_text(size = 8, margin = margin(6, 5, -2, 5), color = "black"),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)),
axis.ticks.length = unit(-0.1, "cm"),
aspect.ratio = 1)
gg_models
ggsave("output/StochasticElements/StimFluctByModelType.png", width = 2, height = 2, dpi = 600, unit = "in")
rm(list = ls())
source("scripts/__Util__MASTER.R")
source("scripts/3_PrepPlotExperimentData.R")
library(RColorBrewer)
library(scales)
load("output/__RData/FixedDelta06Sigma01Eta7100reps.Rdata")
#############
####################
# Stimulus Fluctuation
####################
# Unlist
stims <- unlist(groups_stim, recursive = FALSE)
stims <- do.call("rbind", stims)
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 1) %>%
filter(t != 0) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1),
s2 = mean(s2)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
# Make sure first diff row of each new set is NA
sets <- which(stimFluct$BeginSet == TRUE)
stimFluct$s1Diff[sets] <- NA
stimFluct$s2Diff[sets] <- NA
# Summarise by colony/set
stimFluct <- stimFluct %>%
group_by(n, Set) %>%
summarise(s1Fluct = mean(s1Diff, na.rm = TRUE),
s2Fluct = mean(s2Diff, na.rm = TRUE)) %>%
mutate(GroupSizeFactor = factor(n, levels = sort(unique(n))),
sFluct = (s1Fluct + s2Fluct) / 2)
# Summarise by n
stimSumFluct <- stimFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(s1FluctMean = mean(s1Fluct, na.rm = TRUE),
s1FluctSE = sd(s1Fluct, na.rm = TRUE) / sqrt(length(s1Fluct)),
s2FluctMean = mean(s2Fluct, na.rm = TRUE),
s2FluctSE = sd(s2Fluct, na.rm = TRUE) / sqrt(length(s2Fluct)),
sFluctMean = mean(sFluct, na.rm = TRUE),
sFluctSE = sd(sFluct, na.rm = TRUE) / sqrt(length(sFluct)))
stimSumFluct <- as.data.frame(stimSumFluct)
stimSumFluct <- stimSumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
# Plot
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1Fluct),
fill = "grey50",
colour = "grey50",
position = position_jitter(width = 0.1),
size = 0.7,
alpha = 0.4,
stroke = 0) +
# geom_line(data = stimSumFluct,
#           aes(x = n, y = s1FluctMean),
#           size = 0.3) +���
theme_classic() +
labs(x = "Group size",
y = "Stimulus fluctuation") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
scale_y_continuous(breaks = seq(0, 2, 0.2),
limits = c(0, 0.85),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE),
colour = "black",
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
colour = "black",
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)))
gg_stimfluct
ggsave("output/FitnessPlots/StimuFluctuations_1TimeSteps_Wide.png",  width = 3, height = 2, dpi = 800)
####################
# Task Performance Fluctuation
####################
# Unlist
tallies <- unlist(groups_taskTally, recursive = FALSE)
tallies <- do.call("rbind", tallies)
#### 1 Time steps ####
# Normalize and Summarise by "day" (i.e., time window) and calculate difference
tallyFluct <- tallies %>%
mutate(Task1 = Task1 / n,
Task2 = Task2 / n,
Inactive = Inactive / n,
Set = paste0(n, "-", replicate),
Window = t %/% 1) %>%
group_by(n, Set, Window) %>%
summarise(Task1 = mean(Task1),
Task2 = mean(Task2),
Inactive = mean(Inactive)) %>%
mutate(Task1Diff = abs(Task1 - lag(Task1)),
Task2Diff = abs(Task2 - lag(Task2)),
InactiveDiff = abs(Inactive - lag(Inactive)),
BeginSet = !duplicated(Set))
# Make sure first diff row of each new set is NA
sets <- which(tallyFluct$BeginSet == TRUE)
tallyFluct$Task1Diff[sets] <- NA
tallyFluct$Task2Diff[sets] <- NA
tallyFluct$InactiveDiff[sets] <- NA
# Summarise by colony/set
tallyFluct <- tallyFluct %>%
group_by(n, Set) %>%
summarise(Task1Fluct = mean(Task1Diff, na.rm = TRUE),
Task2Fluct = mean(Task2Diff, na.rm = TRUE),
InactiveFluct = mean(InactiveDiff, na.rm = TRUE)) %>%
mutate(GroupSizeFactor = factor(n, levels = sort(unique(n))))
# Summarise by n
tallySumFluct <- tallyFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(Task1FluctMean = mean(Task1Fluct, na.rm = TRUE),
Task1FluctSE = sd(Task1Fluct) / sqrt(length(Task1Fluct)),
Task2FluctMean = mean(Task2Fluct, na.rm = TRUE),
Task2FluctSE = sd(Task2Fluct, na.rm = TRUE) / sqrt(length(Task2Fluct)),
InactiveFluctMean = mean(InactiveFluct, na.rm = TRUE),
InactiveFluctSE = sd(InactiveFluct, na.rm = TRUE) / sqrt(length(InactiveFluct)))
tallySumFluct <- as.data.frame(tallySumFluct)
tallySumFluct <- tallySumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
# Plot
gg_fluct <- ggplot() +
geom_point(data = tallyFluct,
aes(x = n, y = Task1Fluct),
fill = "grey50",
colour = "grey50",
size = 0.7,
position = position_jitter(width = 0.1),
alpha = 0.4,
stroke = 0) +
theme_classic() +
labs(x = "Group size",
y = "Task fluctuation") +
scale_x_continuous(breaks = unique(tallyFluct$n)) +
scale_y_continuous(breaks = seq(0, 0.22, 0.02),
limits = c(0, 0.155),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = tallySumFluct,
aes(x = n,
ymin = Task1FluctMean - Task1FluctSE,
ymax = Task1FluctMean + Task1FluctSE),
colour= "black",
size = 0.25) +
geom_point(data = tallySumFluct,
aes(x = n, y = Task1FluctMean),
colour = "black",
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)))
gg_fluct
ggsave("output/FitnessPlots/TaskFluctuations_1TimeStep_Wide.png",  width = 3, height = 2, dpi = 800)
####################
# Stimulus Fluctuation
####################
# Unlist
stims <- unlist(groups_stim, recursive = FALSE)
stims <- do.call("rbind", stims)
#### 1 Time steps ####
# Normalize and Summarise by "day" (i.e., time window) and calculate difference
stimFluct <- stims %>%
select(-delta1, -delta2) %>%
mutate(Set = paste0(n, "-", replicate)) %>%
group_by(Set) %>%
mutate(t = 0:(length(Set)-1)) %>%
mutate(Window = t %/% 1) %>%
filter(t != 0) %>%
group_by(n, Set, Window) %>%
summarise(s1 = mean(s1),
s2 = mean(s2)) %>%
mutate(s1Diff = abs(s1 - lag(s1)),
s2Diff = abs(s2 - lag(s2)),
BeginSet = !duplicated(Set))
# Make sure first diff row of each new set is NA
sets <- which(stimFluct$BeginSet == TRUE)
stimFluct$s1Diff[sets] <- NA
stimFluct$s2Diff[sets] <- NA
# Summarise by colony/set
stimFluct <- stimFluct %>%
group_by(n, Set) %>%
summarise(s1Fluct = mean(s1Diff, na.rm = TRUE),
s2Fluct = mean(s2Diff, na.rm = TRUE)) %>%
mutate(GroupSizeFactor = factor(n, levels = sort(unique(n))),
sFluct = (s1Fluct + s2Fluct) / 2)
# Summarise by n
stimSumFluct <- stimFluct %>%
group_by(n, GroupSizeFactor) %>%
summarise(s1FluctMean = mean(s1Fluct, na.rm = TRUE),
s1FluctSE = sd(s1Fluct, na.rm = TRUE) / sqrt(length(s1Fluct)),
s2FluctMean = mean(s2Fluct, na.rm = TRUE),
s2FluctSE = sd(s2Fluct, na.rm = TRUE) / sqrt(length(s2Fluct)),
sFluctMean = mean(sFluct, na.rm = TRUE),
sFluctSE = sd(sFluct, na.rm = TRUE) / sqrt(length(sFluct)))
stimSumFluct <- as.data.frame(stimSumFluct)
stimSumFluct <- stimSumFluct %>%
mutate(GroupSizeFactor = factor(GroupSizeFactor, levels = sort(unique(n))))
# Plot
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1Fluct),
fill = "grey50",
colour = "grey50",
position = position_jitter(width = 0.1),
size = 0.7,
alpha = 0.4,
stroke = 0) +
# geom_line(data = stimSumFluct,
#           aes(x = n, y = s1FluctMean),
#           size = 0.3) +���
theme_classic() +
labs(x = "Group size",
y = "Stimulus fluctuation") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
scale_y_continuous(breaks = seq(0, 2, 0.2),
limits = c(0, 0.85),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE),
colour = "black",
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
colour = "black",
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text = element_text(size = 8),
axis.title = element_text(size = 10, margin = margin(0, 0, 0, 0)))
# Plot
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1Fluct),
fill = "grey50",
colour = "grey50",
position = position_jitter(width = 0.1),
size = 0.7,
alpha = 0.4,
stroke = 0) +
# geom_line(data = stimSumFluct,
#           aes(x = n, y = s1FluctMean),
#           size = 0.3) +���
theme_classic() +
labs(x = "Group size",
y = "Stimulus fluctuation") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
scale_y_continuous(breaks = seq(0, 2, 0.2),
limits = c(0, 0.85),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE),
colour = "black",
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
colour = "black",
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text = element_text(size = 8),
axis.title.y = element_text(size = 10, margin = margin(0, 5, 0, 0)),
axis.title.x = element_text(size = 10))
gg_stimfluct
ggsave("output/FitnessPlots/StimuFluctuations_1TimeSteps_Wide.png",  width = 3, height = 2, dpi = 800)
# Plot
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1Fluct),
fill = "grey50",
colour = "grey50",
position = position_jitter(width = 0.1),
size = 0.7,
alpha = 0.4,
stroke = 0) +
# geom_line(data = stimSumFluct,
#           aes(x = n, y = s1FluctMean),
#           size = 0.3) +���
theme_classic() +
labs(x = "Group size",
y = "Stimulus fluctuation") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
scale_y_continuous(breaks = seq(0, 2, 0.2),
limits = c(0, 0.85),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE),
colour = "black",
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
colour = "black",
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text = element_text(size = 8),
axis.title.y = element_text(size = 10, margin = margin(0, 10, 0, 0)),
axis.title.x = element_text(size = 10))
gg_stimfluct
ggsave("output/FitnessPlots/StimuFluctuations_1TimeSteps_Wide.png",  width = 3, height = 2, dpi = 800)
# Plot
gg_stimfluct <- ggplot() +
geom_point(data = stimFluct,
aes(x = n, y = s1Fluct),
fill = "grey50",
colour = "grey50",
position = position_jitter(width = 0.1),
size = 0.7,
alpha = 0.4,
stroke = 0) +
# geom_line(data = stimSumFluct,
#           aes(x = n, y = s1FluctMean),
#           size = 0.3) +���
theme_classic() +
labs(x = "Group size",
y = "Stimulus fluctuation") +
scale_x_continuous(breaks = unique(stimFluct$n)) +
scale_y_continuous(breaks = seq(0, 2, 0.2),
limits = c(0, 0.85),
expand = c(0, 0)) +
theme(legend.position = "none") +
# Mean and SE portion of plot
geom_errorbar(data = stimSumFluct,
aes(x = n,
ymin = s1FluctMean - s1FluctSE,
ymax = s1FluctMean + s1FluctSE),
colour = "black",
size = 0.25) +
geom_point(data = stimSumFluct,
aes(x = n, y = s1FluctMean),
colour = "black",
size = 1.5) +
theme(legend.position = "none",
legend.justification = c(1, 1),
legend.title = element_blank(),
legend.key.height = unit(0.3, "cm"),
legend.key.width= unit(0.4, "cm"),
legend.margin =  margin(t = 0, r = 0, b = 0, l = -0.2, "cm"),
legend.text = element_text(size = 6),
legend.text.align = 0,
# legend.box.background = element_rect(),
axis.text = element_text(size = 8),
axis.title.y = element_text(size = 10, margin = margin(0, 11, 0, 0)),
axis.title.x = element_text(size = 10))
gg_stimfluct
ggsave("output/FitnessPlots/StimuFluctuations_1TimeSteps_Wide.png",  width = 3, height = 2, dpi = 800)
